<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.todo.task.mapper.SysTaskMapper">

	<resultMap type="SysTask" id="SysTaskResult">
		<id     property="taskId"     column="task_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="taskName"   column="task_name"   />
		<result property="orderNum"   column="order_num"   />
		<result property="description"   column="description"   />
		<result property="startTime" column="start_time" />
		<result property="deadline"   column="deadline"   />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="parentName" column="parent_name" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
	</resultMap>
	
	<sql id="selectTaskVo">
        select t.task_id, t.parent_id, t.ancestors, t.task_name, t.order_num,t.description,t.start_time,t.deadline, t.status,t.del_flag, t.create_time
        from sys_task t
    </sql>
    
	<select id="selectTaskList" parameterType="SysTask" resultMap="SysTaskResult">
        <include refid="selectTaskVo"/>
		where t.del_flag = '0'
		<if test="taskId != null and taskId != 0">
			AND task_id = #{taskId}
		</if>
        <if test="parentId != null and parentId != 0">
			AND parent_id = #{parentId}
		</if>
		<if test="taskName != null and taskName != ''">
			AND task_name like concat('%', #{taskName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by t.parent_id, t.order_num
    </select>
    
    <select id="selectTaskListByRoleId" resultType="Long">
		select t.task_id
		from sys_task t
            left join sys_role_task rt on t.task_id = rt.task_id
        where rt.role_id = #{roleId}
            <if test="taskCheckStrictly">
              and t.task_id not in (select t.parent_id from sys_task t inner join sys_role_task rt on t.task_id = rt.task_id and rt.role_id = #{roleId})
            </if>
		order by t.parent_id, t.order_num
	</select>
    
    <select id="selectTaskById" parameterType="Long" resultMap="SysTaskResult">
		select t.task_id, t.parent_id, t.ancestors, t.task_name, t.order_num,t.description,t.deadline,t.start_time,t.status,
			(select task_name from sys_task where task_id = t.parent_id) parent_name
		from sys_task t
		where t.task_id = #{taskId}
	</select>
    
    <select id="checkTaskExistUser" parameterType="Long" resultType="int">
		select count(1) from sys_user where task_id = #{taskId} and del_flag = '0'
	</select>
	
	<select id="hasChildByTaskId" parameterType="Long" resultType="int">
		select count(1) from sys_task
		where del_flag = '0' and parent_id = #{taskId} limit 1
	</select>
	
	<select id="selectChildrenTaskById" parameterType="Long" resultMap="SysTaskResult">
		select * from sys_task where find_in_set(#{taskId}, ancestors)
	</select>
	
	<select id="selectNormalChildrenTaskById" parameterType="Long" resultType="int">
		select count(*) from sys_task where status = 0 and del_flag = '0' and find_in_set(#{taskId}, ancestors)
	</select>
	
	<select id="checkTaskNameUnique" resultMap="SysTaskResult">
	    <include refid="selectTaskVo"/>
		where task_name=#{taskName} and parent_id = #{parentId} and del_flag = '0' limit 1
	</select>
    <select id="selectTaskByStatus" parameterType="String" resultMap="SysTaskResult">
		select * from sys_task
		where del_flag = '0' and status = #{status}
	</select>

    <insert id="insertTask" parameterType="SysTask">
 		insert into sys_task(
 			<if test="taskId != null and taskId != 0">task_id,</if>
 			<if test="parentId != null and parentId != 0">parent_id,</if>
 			<if test="taskName != null and taskName != ''">task_name,</if>
 			<if test="ancestors != null and ancestors != ''">ancestors,</if>
 			<if test="orderNum != null">order_num,</if>
 			<if test="description != null and description != ''">description,</if>
 			<if test="startTime != null and startTime != ''">start_time,</if>
 			<if test="deadline != null and deadline != ''">deadline,</if>
 			<if test="status != null">status,</if>
 			create_time
 		)values(
 			<if test="taskId != null and taskId != 0">#{taskId},</if>
 			<if test="parentId != null and parentId != 0">#{parentId},</if>
 			<if test="taskName != null and taskName != ''">#{taskName},</if>
 			<if test="ancestors != null and ancestors != ''">#{ancestors},</if>
 			<if test="orderNum != null">#{orderNum},</if>
 			<if test="description != null and description != ''">#{description},</if>
 			<if test="startTime != null and startTime != ''">#{startTime},</if>
 			<if test="deadline != null and deadline != ''">#{deadline},</if>
 			<if test="status != null">#{status},</if>
 			sysdate()
 		)
	</insert>
	
	<update id="updateTask" parameterType="SysTask">
 		update sys_task
 		<set>
 			<if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
 			<if test="taskName != null and taskName != ''">task_name = #{taskName},</if>
 			<if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
 			<if test="orderNum != null">order_num = #{orderNum},</if>
			<if test="description != null and description != ''">description = #{description},</if>
			<if test="startTime != null and startTime != ''">start_time = #{startTime},</if>
			<if test="deadline != null and deadline != ''">deadline = #{deadline},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			update_time = sysdate()
 		</set>
 		where task_id = #{taskId}
	</update>
	
	<update id="updateTaskChildren" parameterType="java.util.List">
	    update sys_task set ancestors =
	    <foreach collection="tasks" item="item" index="index"
	        separator=" " open="case task_id" close="end">
	        when #{item.taskId} then #{item.ancestors}
	    </foreach>
	    where task_id in
	    <foreach collection="tasks" item="item" index="index"
	        separator="," open="(" close=")">
	        #{item.taskId}
	    </foreach>
	</update>
	 
	<update id="updateTaskStatusNormal" parameterType="Long">
 	    update sys_task set status = '0' where task_id in 
 	    <foreach collection="array" item="taskId" open="(" separator="," close=")">
        	#{taskId}
        </foreach>
	</update>
	
	<delete id="deleteTaskById" parameterType="Long">
		update sys_task set del_flag = '2' where task_id = #{taskId}
	</delete>

</mapper> 